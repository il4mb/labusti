// <auto-generated />
using Host.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Host.Migrations.Timetable
{
    [DbContext(typeof(TimetableContext))]
    [Migration("20240910163528_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Host.Entity.ScheduleTime", b =>
                {
                    b.Property<int>("ScheduleTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minute")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleTimeId");

                    b.ToTable("ScheduleTime");
                });

            modelBuilder.Entity("Host.Entity.Timetable", b =>
                {
                    b.Property<int>("TimetableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LecturerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudyProgram")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TimetableId");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("Host.Entity.Timetable", b =>
                {
                    b.OwnsOne("Host.Entity.Schedule", "Schedule", b1 =>
                        {
                            b1.Property<int>("TimetableId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DayWeek")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("ScheduleId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("TimeEndScheduleTimeId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("TimeStartScheduleTimeId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("TimetableId");

                            b1.HasIndex("TimeEndScheduleTimeId");

                            b1.HasIndex("TimeStartScheduleTimeId");

                            b1.ToTable("Timetables");

                            b1.HasOne("Host.Entity.ScheduleTime", "TimeEnd")
                                .WithMany()
                                .HasForeignKey("TimeEndScheduleTimeId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Host.Entity.ScheduleTime", "TimeStart")
                                .WithMany()
                                .HasForeignKey("TimeStartScheduleTimeId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("TimetableId");

                            b1.Navigation("TimeEnd");

                            b1.Navigation("TimeStart");
                        });

                    b.Navigation("Schedule")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
